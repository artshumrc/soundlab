stages:
  - containerize
  - staging


variables:
  # $GCP_PROJECT_NAME set in Gitlab settings; 
  # SHA for ID in deployment; branchName for convenience;
  IMAGE_TAG: us.gcr.io/archimedes-01201/$GCP_PROJECT_NAME:$CI_COMMIT_SHA
  IMAGE_TAG_BRANCH: us.gcr.io/archimedes-01201/$GCP_PROJECT_NAME:$CI_COMMIT_REF_SLUG
  CONTAINER_NAME: $GCP_PROJECT_NAME
  DEPLOYMENT_ID_STAGING: $GCP_PROJECT_NAME-staging
  DEPLOYMENT_ID_PRODUCION: $GCP_PROJECT_NAME-production


docker-build:
  stage: containerize
  image: google/cloud-sdk:latest
  services:
    - docker:dind
  only:
    - master
    - develop
  before_script:
    # auth to gcp
    - echo $GCP_SERVICE_KEY > gcp-service-key.json
    - gcloud auth activate-service-account --key-file gcp-service-key.json
  script:
    # containerize
    - docker build -t $IMAGE_TAG -t $IMAGE_TAG_BRANCH . # Build docker image
    # publish to private gcr
    - gcloud docker -- push $IMAGE_TAG
    - gcloud docker -- push $IMAGE_TAG_BRANCH 


deploy-staging:
  image: google/cloud-sdk:latest
  services:
    - docker:dind
  only:
    - master # staging
  stage: staging
  before_script: 
    # auth to gcp
    - echo $GCP_SERVICE_KEY > gcp-service-key.json
    - gcloud auth activate-service-account --key-file gcp-service-key.json
  script:
    # rolling upgrade container
    - gcloud config set compute/zone us-east1-b
    - gcloud container clusters get-credentials archimedes-cluster
    - kubectl set image deployment/$DEPLOYMENT_ID_STAGING $CONTAINER_NAME=us.gcr.io/archimedes-01201/$GCP_PROJECT_NAME:$CI_COMMIT_SHA